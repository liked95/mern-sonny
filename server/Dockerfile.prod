# Stage 1: Build the server app
FROM node:18-alpine AS server-build

WORKDIR /app

# Install dependencies
COPY server/package.json ./
RUN yarn install

# Copy the server source code
COPY server/ ./

# Build the server (e.g., TypeScript â†’ JavaScript)
RUN yarn build

# Stage 2: Build the client app (same as the client Dockerfile)
FROM node:18-alpine AS client-build

WORKDIR /app

# Install dependencies
COPY client/package.json ./
RUN yarn install

# Copy the client source code
COPY client/ ./

# Build the production-ready client app
RUN yarn build

# Stage 3: Prepare runtime environment for the server
FROM node:18-alpine

WORKDIR /app

# Install only production dependencies
COPY server/package.json ./
RUN yarn install --production

# Copy the compiled server files
COPY --from=server-build /app/dist /app/dist

# Copy the built client files from the client-build stage into the server's public directory
COPY --from=client-build /app/dist /app/public

# Expose the server port
EXPOSE 8000

# Start the server
CMD ["yarn", "start"]
