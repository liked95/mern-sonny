name: Deploy to EC2

on:
  push:
    branches:
      - master

env:
  EC2_USER: ec2-user@13.236.137.92
  APP_DIRECTORY: /path/to/app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 1: Build the server app image
      - name: Build the client app image
        run: |
          docker build -t myapp-client -f client/Dockerfile.prod .

      - name: Build the server app image
        run: |
          docker build -t myapp-server -f server/Dockerfile.prod .

      # Step 2: Copy the client build files into the server container
      - name: Copy client build files into the server container
        run: |
          docker create --name temp-container myapp-client
          docker cp temp-container:/app/dist ./client/dist
          docker rm temp-container

          docker cp ./client/dist/. myapp-server:/app/public/

      # Step 3: Log in to Docker Hub using credentials stored in GitHub Secrets
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 4: Tag the Docker image for pushing to Docker Hub
      - name: Tag the Docker image
        run: |
          docker tag myapp-server:latest liked95/mern-sonny:${{ github.sha }}

      # Step 5: Push the Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: |
          docker push liked95/mern-sonny:${{ github.sha }}

      # Step 6: Deploy to EC2 (pull the server image and restart the container)
      - name: Deploy to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_USER >> ~/.ssh/known_hosts

          ssh $EC2_USER << EOF
            cd $APP_DIRECTORY
            docker pull liked95/mern-sonny:${{ github.sha }}
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
            docker ps
          EOF